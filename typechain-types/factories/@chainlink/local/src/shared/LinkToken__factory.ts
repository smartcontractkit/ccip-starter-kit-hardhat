/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  LinkToken,
  LinkTokenInterface,
} from "../../../../../@chainlink/local/src/shared/LinkToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferAndCall",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600f81526020017f436861696e4c696e6b20546f6b656e00000000000000000000000000000000008152506040518060400160405280600481526020017f4c494e4b0000000000000000000000000000000000000000000000000000000081525081818160039081620000919190620004cf565b508060049081620000a39190620004cf565b5050505050620000b8620000be60201b60201c565b620006d1565b620000dc336b033b2e3c9fd0803ce8000000620000de60201b60201c565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000150576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001479062000617565b60405180910390fd5b62000164600083836200024b60201b60201c565b806002600082825462000178919062000668565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200022b9190620006b4565b60405180910390a362000247600083836200025060201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d757607f821691505b602082108103620002ed57620002ec6200028f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000318565b62000363868362000318565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003b0620003aa620003a4846200037b565b62000385565b6200037b565b9050919050565b6000819050919050565b620003cc836200038f565b620003e4620003db82620003b7565b84845462000325565b825550505050565b600090565b620003fb620003ec565b62000408818484620003c1565b505050565b5b81811015620004305762000424600082620003f1565b6001810190506200040e565b5050565b601f8211156200047f576200044981620002f3565b620004548462000308565b8101602085101562000464578190505b6200047c620004738562000308565b8301826200040d565b50505b505050565b600082821c905092915050565b6000620004a46000198460080262000484565b1980831691505092915050565b6000620004bf838362000491565b9150826002028217905092915050565b620004da8262000255565b67ffffffffffffffff811115620004f657620004f562000260565b5b620005028254620002be565b6200050f82828562000434565b600060209050601f83116001811462000547576000841562000532578287015190505b6200053e8582620004b1565b865550620005ae565b601f1984166200055786620002f3565b60005b8281101562000581578489015182556001820191506020850194506020810190506200055a565b86831015620005a157848901516200059d601f89168262000491565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005ff601f83620005b6565b91506200060c82620005c7565b602082019050919050565b600060208201905081810360008301526200063281620005f0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000675826200037b565b915062000682836200037b565b92508282019050808211156200069d576200069c62000639565b5b92915050565b620006ae816200037b565b82525050565b6000602082019050620006cb6000830184620006a3565b92915050565b6115fe80620006e16000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80634000aea0116100715780634000aea0146101a357806370a08231146101d357806395d89b4114610203578063a457c2d714610221578063a9059cbb14610251578063dd62ed3e14610281576100b4565b806306fdde03146100b9578063095ea7b3146100d757806318160ddd1461010757806323b872dd14610125578063313ce567146101555780633950935114610173575b600080fd5b6100c16102b1565b6040516100ce9190610c56565b60405180910390f35b6100f160048036038101906100ec9190610d20565b610343565b6040516100fe9190610d7b565b60405180910390f35b61010f610366565b60405161011c9190610da5565b60405180910390f35b61013f600480360381019061013a9190610dc0565b610370565b60405161014c9190610d7b565b60405180910390f35b61015d61039f565b60405161016a9190610e2f565b60405180910390f35b61018d60048036038101906101889190610d20565b6103a8565b60405161019a9190610d7b565b60405180910390f35b6101bd60048036038101906101b89190610f7f565b6103df565b6040516101ca9190610d7b565b60405180910390f35b6101ed60048036038101906101e89190610fee565b6104ee565b6040516101fa9190610da5565b60405180910390f35b61020b610536565b6040516102189190610c56565b60405180910390f35b61023b60048036038101906102369190610d20565b6105c8565b6040516102489190610d7b565b60405180910390f35b61026b60048036038101906102669190610d20565b61063f565b6040516102789190610d7b565b60405180910390f35b61029b6004803603810190610296919061101b565b610662565b6040516102a89190610da5565b60405180910390f35b6060600380546102c09061108a565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec9061108a565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b5050505050905090565b60008061034e6106e9565b905061035b8185856106f1565b600191505092915050565b6000600254905090565b60008061037b6106e9565b90506103888582856108ba565b610393858585610946565b60019150509392505050565b60006012905090565b6000806103b36106e9565b90506103d48185856103c58589610662565b6103cf91906110ea565b6106f1565b600191505092915050565b60006103eb848461063f565b508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16858560405161044b929190611173565b60405180910390a360008473ffffffffffffffffffffffffffffffffffffffff163b11156104e3578373ffffffffffffffffffffffffffffffffffffffff1663a4c0ed363385856040518463ffffffff1660e01b81526004016104b0939291906111b2565b600060405180830381600087803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b505050505b600190509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105459061108a565b80601f01602080910402602001604051908101604052809291908181526020018280546105719061108a565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b6000806105d36106e9565b905060006105e18286610662565b905083811015610626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061d90611262565b60405180910390fd5b61063382868684036106f1565b60019250505092915050565b60008061064a6106e9565b9050610657818585610946565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610760576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610757906112f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c690611386565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108ad9190610da5565b60405180910390a3505050565b60006108c68484610662565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109405781811015610932576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610929906113f2565b60405180910390fd5b61093f84848484036106f1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac90611484565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1b90611516565b60405180910390fd5b610a2f838383610bbc565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610ab5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aac906115a8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba39190610da5565b60405180910390a3610bb6848484610bc1565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c00578082015181840152602081019050610be5565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c2882610bc6565b610c328185610bd1565b9350610c42818560208601610be2565b610c4b81610c0c565b840191505092915050565b60006020820190508181036000830152610c708184610c1d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cb782610c8c565b9050919050565b610cc781610cac565b8114610cd257600080fd5b50565b600081359050610ce481610cbe565b92915050565b6000819050919050565b610cfd81610cea565b8114610d0857600080fd5b50565b600081359050610d1a81610cf4565b92915050565b60008060408385031215610d3757610d36610c82565b5b6000610d4585828601610cd5565b9250506020610d5685828601610d0b565b9150509250929050565b60008115159050919050565b610d7581610d60565b82525050565b6000602082019050610d906000830184610d6c565b92915050565b610d9f81610cea565b82525050565b6000602082019050610dba6000830184610d96565b92915050565b600080600060608486031215610dd957610dd8610c82565b5b6000610de786828701610cd5565b9350506020610df886828701610cd5565b9250506040610e0986828701610d0b565b9150509250925092565b600060ff82169050919050565b610e2981610e13565b82525050565b6000602082019050610e446000830184610e20565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e8c82610c0c565b810181811067ffffffffffffffff82111715610eab57610eaa610e54565b5b80604052505050565b6000610ebe610c78565b9050610eca8282610e83565b919050565b600067ffffffffffffffff821115610eea57610ee9610e54565b5b610ef382610c0c565b9050602081019050919050565b82818337600083830152505050565b6000610f22610f1d84610ecf565b610eb4565b905082815260208101848484011115610f3e57610f3d610e4f565b5b610f49848285610f00565b509392505050565b600082601f830112610f6657610f65610e4a565b5b8135610f76848260208601610f0f565b91505092915050565b600080600060608486031215610f9857610f97610c82565b5b6000610fa686828701610cd5565b9350506020610fb786828701610d0b565b925050604084013567ffffffffffffffff811115610fd857610fd7610c87565b5b610fe486828701610f51565b9150509250925092565b60006020828403121561100457611003610c82565b5b600061101284828501610cd5565b91505092915050565b6000806040838503121561103257611031610c82565b5b600061104085828601610cd5565b925050602061105185828601610cd5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110a257607f821691505b6020821081036110b5576110b461105b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110f582610cea565b915061110083610cea565b9250828201905080821115611118576111176110bb565b5b92915050565b600081519050919050565b600082825260208201905092915050565b60006111458261111e565b61114f8185611129565b935061115f818560208601610be2565b61116881610c0c565b840191505092915050565b60006040820190506111886000830185610d96565b818103602083015261119a818461113a565b90509392505050565b6111ac81610cac565b82525050565b60006060820190506111c760008301866111a3565b6111d46020830185610d96565b81810360408301526111e6818461113a565b9050949350505050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b600061124c602583610bd1565b9150611257826111f0565b604082019050919050565b6000602082019050818103600083015261127b8161123f565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006112de602483610bd1565b91506112e982611282565b604082019050919050565b6000602082019050818103600083015261130d816112d1565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611370602283610bd1565b915061137b82611314565b604082019050919050565b6000602082019050818103600083015261139f81611363565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b60006113dc601d83610bd1565b91506113e7826113a6565b602082019050919050565b6000602082019050818103600083015261140b816113cf565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061146e602583610bd1565b915061147982611412565b604082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611500602383610bd1565b915061150b826114a4565b604082019050919050565b6000602082019050818103600083015261152f816114f3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611592602683610bd1565b915061159d82611536565b604082019050919050565b600060208201905081810360008301526115c181611585565b905091905056fea26469706673582212206e63da16cc1550774c00e39719f1b9139b08388c84fad8a097f9ce05de8af5e864736f6c63430008180033";

type LinkTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinkTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinkToken__factory extends ContractFactory {
  constructor(...args: LinkTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      LinkToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LinkToken__factory {
    return super.connect(runner) as LinkToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinkTokenInterface {
    return new Interface(_abi) as LinkTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LinkToken {
    return new Contract(address, _abi, runner) as unknown as LinkToken;
  }
}
