/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../common";
import type {
  Internal,
  InternalInterface,
} from "../../../../../../../@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Internal";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidEVMAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "SVMAddress",
        type: "bytes",
      },
    ],
    name: "InvalidSVMAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "CHAIN_FAMILY_SELECTOR_EVM",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CHAIN_FAMILY_SELECTOR_SVM",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_ESTIMATION_SENDER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_PRICE_BITS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MESSAGE_FIXED_BYTES",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MESSAGE_FIXED_BYTES_PER_TOKEN",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRECOMPILE_SPACE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6102f5610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c8063958d009911610065578063958d0099146100e6578063dc47c58b14610104578063e5fb565214610122578063fb633e9c1461014057610087565b806318994e7a1461008c578063608c7039146100aa5780637a4bb232146100c8575b600080fd5b61009461015e565b6040516100a191906101bb565b60405180910390f35b6100b2610164565b6040516100bf9190610217565b60405180910390f35b6100d061017b565b6040516100dd919061024e565b60405180910390f35b6100ee610180565b6040516100fb91906102a4565b60405180910390f35b61010c61018b565b60405161011991906101bb565b60405180910390f35b61012a610191565b60405161013791906101bb565b60405180910390f35b610148610197565b60405161015591906102a4565b60405180910390f35b6101e081565b72c11c11c11c11c11c11c11c11c11c11c11c11c181565b607081565b631e10bdc460e01b81565b61012081565b61040081565b632812d52c60e01b81565b6000819050919050565b6101b5816101a2565b82525050565b60006020820190506101d060008301846101ac565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610201826101d6565b9050919050565b610211816101f6565b82525050565b600060208201905061022c6000830184610208565b92915050565b600060ff82169050919050565b61024881610232565b82525050565b6000602082019050610263600083018461023f565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61029e81610269565b82525050565b60006020820190506102b96000830184610295565b9291505056fea264697066735822122051bffca810610e07039021b91553fe29cb025c68cf66389f0dacd594efa92ff864736f6c63430008180033";

type InternalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InternalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Internal__factory extends ContractFactory {
  constructor(...args: InternalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Internal & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Internal__factory {
    return super.connect(runner) as Internal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InternalInterface {
    return new Interface(_abi) as InternalInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Internal {
    return new Contract(address, _abi, runner) as unknown as Internal;
  }
}
