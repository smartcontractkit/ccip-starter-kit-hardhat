/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../../../../../@chainlink/contracts-ccip/src/v0.8/ccip/test/mocks/MockRouter.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "ReceiverError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    name: "MsgExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getOnRamp",
    outputs: [
      {
        internalType: "address",
        name: "onRampAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOffRamp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612672806100206000396000f3fe6080604052600436106100915760003560e01c8063a48a905811610059578063a48a9058146101a8578063a8d87a3b146101e5578063d6be695a14610222578063ee18e0d31461024d578063fbca3b741461027857610091565b806320487ded146100965780633cf97983146100d357806369fe0e2d1461011257806383826b2b1461013b57806396f4e9f914610178575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611491565b6102b5565b6040516100ca91906114fc565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f59190611575565b6102c1565b60405161010993929190611692565b60405180910390f35b34801561011e57600080fd5b50610139600480360381019061013491906116d0565b6102ec565b005b34801561014757600080fd5b50610162600480360381019061015d91906116fd565b6102f6565b60405161016f919061173d565b60405180910390f35b610192600480360381019061018d9190611777565b610302565b60405161019f91906117ec565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca9190611807565b61079a565b6040516101dc919061173d565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190611807565b6107a5565b6040516102199190611843565b60405180910390f35b34801561022e57600080fd5b506102376107b3565b604051610244919061187d565b60405180910390f35b34801561025957600080fd5b506102626107ba565b60405161026f91906118a7565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a9190611807565b6107c0565b6040516102ac9190611980565b60405180910390f35b60008054905092915050565b6000606060006102dc876102d490611aae565b878787610813565b9250925092509450945094915050565b8060008190555050565b60006001905092915050565b600060208280600001906103169190611ad0565b90501461036a5781806000019061032d9190611ad0565b6040517f370d875f000000000000000000000000000000000000000000000000000000008152600401610361929190611b60565b60405180910390fd5b600082806000019061037c9190611ad0565b81019061038991906116d0565b905073ffffffffffffffffffffffffffffffffffffffff80168111806103af5750600a81105b15610401578280600001906103c49190611ad0565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016103f8929190611b60565b60405180910390fd5b6000610416858561041190611b84565b6102b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168460600160208101906104439190611b97565b73ffffffffffffffffffffffffffffffffffffffff160361049d5780341015610498576040517f07da6ee600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610518565b60003411156104d8576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105173330838760600160208101906104f19190611b97565b73ffffffffffffffffffffffffffffffffffffffff166109ec909392919063ffffffff16565b5b600082905060006105378680608001906105329190611ad0565b610a75565b6000015190506000866040516020016105509190611eb6565b60405160208183030381529060405280519060200120905060006040518060a0016040528083815260200167de41ba4fc9d91ad967ffffffffffffffff168152602001336040516020016105a49190611843565b60405160208183030381529060405281526020018980602001906105c89190611ad0565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018980604001906106209190611ed8565b808060200260200160405190810160405280939291908181526020016000905b82821015610670578484839050604002018036038101906106619190611f3b565b81526020019060010190610640565b5050505050815250905060005b88806040019061068d9190611ed8565b90508110156107305761072533868b80604001906106ab9190611ed8565b858181106106bc576106bb611f68565b5b905060400201602001358c80604001906106d69190611ed8565b868181106106e7576106e6611f68565b5b90506040020160000160208101906106ff9190611b97565b73ffffffffffffffffffffffffffffffffffffffff166109ec909392919063ffffffff16565b80600101905061067d565b50600080610742836113888789610813565b50915091508161078957806040517f0a8d6e8c0000000000000000000000000000000000000000000000000000000081526004016107809190611f97565b60405180910390fd5b839850505050505050505092915050565b600060019050919050565b600063499602d29050919050565b62030d4081565b61138881565b6060600067ffffffffffffffff8111156107dd576107dc6110af565b5b60405190808252806020026020018201604052801561080b5781602001602082028036833780820191505090505b509050919050565b6000606060008087606001515114801561082d5750600085145b8061084f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b806108a0575061089e7f85572ffb000000000000000000000000000000000000000000000000000000008573ffffffffffffffffffffffffffffffffffffffff16610b5a90919063ffffffff16565b155b156108c5576001600060405180602001604052806000815250909250925092506109e2565b60006385572ffb60e01b886040516024016108e09190612161565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061094d8186888a6084610b7f565b8094508195508296505050507fa8b0355886b5b7a28bb97e4f0a24feb172618407402721c4012d8b7c6433102f84848460405161098c93929190611692565b60405180910390a17f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b6886000015189602001513384805190602001206040516109d89493929190612192565b60405180910390a1505b9450945094915050565b610a6f846323b872dd60e01b858585604051602401610a0d939291906121d7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610cb2565b50505050565b610a7d611032565b60008383905003610aa757604051806020016040528062030d4063ffffffff168152509050610b54565b6397a657c960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916838390610adb9190612252565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610b31576040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b82826004908092610b44939291906122bb565b810190610b519190612332565b90505b92915050565b6000610b6583610d79565b8015610b775750610b768383610dc6565b5b905092915050565b6000606060008361ffff1667ffffffffffffffff811115610ba357610ba26110af565b5b6040519080825280601f01601f191660200182016040528015610bd55781602001600182028036833780820191505090505b509150863b610c08577f0c3b563c0000000000000000000000000000000000000000000000000000000060005260046000fd5b5a85811015610c3b577fafa32a2c0000000000000000000000000000000000000000000000000000000060005260046000fd5b85810390508660408204820311610c76577f37c3be290000000000000000000000000000000000000000000000000000000060005260046000fd5b5a6000808b5160208d0160008d8df194505a810392503d86811115610c99578690505b808552806000602087013e505050955095509592505050565b6000610d14826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e659092919063ffffffff16565b9050600081511115610d745780806020019051810190610d34919061238b565b610d73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6a9061243b565b60405180910390fd5b5b505050565b6000610da5827f01ffc9a700000000000000000000000000000000000000000000000000000000610dc6565b8015610dbf5750610dbd8263ffffffff60e01b610dc6565b155b9050919050565b60008082604051602401610dda919061246a565b6040516020818303038152906040526301ffc9a760e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610e4d575060208210155b8015610e595750600081115b94505050505092915050565b6060610e748484600085610e7d565b90509392505050565b606082471015610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb9906124f7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610eeb9190612553565b60006040518083038185875af1925050503d8060008114610f28576040519150601f19603f3d011682016040523d82523d6000602084013e610f2d565b606091505b5091509150610f3e87838387610f4a565b92505050949350505050565b60608315610fac576000835103610fa457610f6485610fbf565b610fa3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9a906125b6565b60405180910390fd5b5b829050610fb7565b610fb68383610fe2565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115610ff55781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611029919061261a565b60405180910390fd5b6040518060200160405280600081525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b61107681611059565b811461108157600080fd5b50565b6000813590506110938161106d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110e78261109e565b810181811067ffffffffffffffff82111715611106576111056110af565b5b80604052505050565b6000611119611045565b905061112582826110de565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115611154576111536110af565b5b61115d8261109e565b9050602081019050919050565b82818337600083830152505050565b600061118c61118784611139565b61110f565b9050828152602081018484840111156111a8576111a7611134565b5b6111b384828561116a565b509392505050565b600082601f8301126111d0576111cf61112f565b5b81356111e0848260208601611179565b91505092915050565b600067ffffffffffffffff821115611204576112036110af565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112458261121a565b9050919050565b6112558161123a565b811461126057600080fd5b50565b6000813590506112728161124c565b92915050565b6000819050919050565b61128b81611278565b811461129657600080fd5b50565b6000813590506112a881611282565b92915050565b6000604082840312156112c4576112c3611099565b5b6112ce604061110f565b905060006112de84828501611263565b60008301525060206112f284828501611299565b60208301525092915050565b600061131161130c846111e9565b61110f565b9050808382526020820190506040840283018581111561133457611333611215565b5b835b8181101561135d578061134988826112ae565b845260208401935050604081019050611336565b5050509392505050565b600082601f83011261137c5761137b61112f565b5b813561138c8482602086016112fe565b91505092915050565b600060a082840312156113ab576113aa611099565b5b6113b560a061110f565b9050600082013567ffffffffffffffff8111156113d5576113d461112a565b5b6113e1848285016111bb565b600083015250602082013567ffffffffffffffff8111156114055761140461112a565b5b611411848285016111bb565b602083015250604082013567ffffffffffffffff8111156114355761143461112a565b5b61144184828501611367565b604083015250606061145584828501611263565b606083015250608082013567ffffffffffffffff8111156114795761147861112a565b5b611485848285016111bb565b60808301525092915050565b600080604083850312156114a8576114a761104f565b5b60006114b685828601611084565b925050602083013567ffffffffffffffff8111156114d7576114d6611054565b5b6114e385828601611395565b9150509250929050565b6114f681611278565b82525050565b600060208201905061151160008301846114ed565b92915050565b600080fd5b600060a0828403121561153257611531611517565b5b81905092915050565b600061ffff82169050919050565b6115528161153b565b811461155d57600080fd5b50565b60008135905061156f81611549565b92915050565b6000806000806080858703121561158f5761158e61104f565b5b600085013567ffffffffffffffff8111156115ad576115ac611054565b5b6115b98782880161151c565b94505060206115ca87828801611560565b93505060406115db87828801611299565b92505060606115ec87828801611263565b91505092959194509250565b60008115159050919050565b61160d816115f8565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561164d578082015181840152602081019050611632565b60008484015250505050565b600061166482611613565b61166e818561161e565b935061167e81856020860161162f565b6116878161109e565b840191505092915050565b60006060820190506116a76000830186611604565b81810360208301526116b98185611659565b90506116c860408301846114ed565b949350505050565b6000602082840312156116e6576116e561104f565b5b60006116f484828501611299565b91505092915050565b600080604083850312156117145761171361104f565b5b600061172285828601611084565b925050602061173385828601611263565b9150509250929050565b60006020820190506117526000830184611604565b92915050565b600060a0828403121561176e5761176d611517565b5b81905092915050565b6000806040838503121561178e5761178d61104f565b5b600061179c85828601611084565b925050602083013567ffffffffffffffff8111156117bd576117bc611054565b5b6117c985828601611758565b9150509250929050565b6000819050919050565b6117e6816117d3565b82525050565b600060208201905061180160008301846117dd565b92915050565b60006020828403121561181d5761181c61104f565b5b600061182b84828501611084565b91505092915050565b61183d8161123a565b82525050565b60006020820190506118586000830184611834565b92915050565b600063ffffffff82169050919050565b6118778161185e565b82525050565b6000602082019050611892600083018461186e565b92915050565b6118a18161153b565b82525050565b60006020820190506118bc6000830184611898565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118f78161123a565b82525050565b600061190983836118ee565b60208301905092915050565b6000602082019050919050565b600061192d826118c2565b61193781856118cd565b9350611942836118de565b8060005b8381101561197357815161195a88826118fd565b975061196583611915565b925050600181019050611946565b5085935050505092915050565b6000602082019050818103600083015261199a8184611922565b905092915050565b6119ab816117d3565b81146119b657600080fd5b50565b6000813590506119c8816119a2565b92915050565b600060a082840312156119e4576119e3611099565b5b6119ee60a061110f565b905060006119fe848285016119b9565b6000830152506020611a1284828501611084565b602083015250604082013567ffffffffffffffff811115611a3657611a3561112a565b5b611a42848285016111bb565b604083015250606082013567ffffffffffffffff811115611a6657611a6561112a565b5b611a72848285016111bb565b606083015250608082013567ffffffffffffffff811115611a9657611a9561112a565b5b611aa284828501611367565b60808301525092915050565b6000611aba36836119ce565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611aed57611aec611ac1565b5b80840192508235915067ffffffffffffffff821115611b0f57611b0e611ac6565b5b602083019250600182023603831315611b2b57611b2a611acb565b5b509250929050565b6000611b3f838561161e565b9350611b4c83858461116a565b611b558361109e565b840190509392505050565b60006020820190508181036000830152611b7b818486611b33565b90509392505050565b6000611b903683611395565b9050919050565b600060208284031215611bad57611bac61104f565b5b6000611bbb84828501611263565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611bf057611bef611bce565b5b83810192508235915060208301925067ffffffffffffffff821115611c1857611c17611bc4565b5b600182023603831315611c2e57611c2d611bc9565b5b509250929050565b600082825260208201905092915050565b6000611c538385611c36565b9350611c6083858461116a565b611c698361109e565b840190509392505050565b60008083356001602003843603038112611c9157611c90611bce565b5b83810192508235915060208301925067ffffffffffffffff821115611cb957611cb8611bc4565b5b604082023603831315611ccf57611cce611bc9565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000611d016020840184611263565b905092915050565b6000611d186020840184611299565b905092915050565b611d2981611278565b82525050565b60408201611d406000830183611cf2565b611d4d60008501826118ee565b50611d5b6020830183611d09565b611d686020850182611d20565b50505050565b6000611d7a8383611d2f565b60408301905092915050565b600082905092915050565b6000604082019050919050565b6000611daa8385611cd7565b9350611db582611ce8565b8060005b85811015611dee57611dcb8284611d86565b611dd58882611d6e565b9750611de083611d91565b925050600181019050611db9565b5085925050509392505050565b600060a08301611e0e6000840184611bd3565b8583036000870152611e21838284611c47565b92505050611e326020840184611bd3565b8583036020870152611e45838284611c47565b92505050611e566040840184611c74565b8583036040870152611e69838284611d9e565b92505050611e7a6060840184611cf2565b611e8760608601826118ee565b50611e956080840184611bd3565b8583036080870152611ea8838284611c47565b925050508091505092915050565b60006020820190508181036000830152611ed08184611dfb565b905092915050565b60008083356001602003843603038112611ef557611ef4611ac1565b5b80840192508235915067ffffffffffffffff821115611f1757611f16611ac6565b5b602083019250604082023603831315611f3357611f32611acb565b5b509250929050565b600060408284031215611f5157611f5061104f565b5b6000611f5f848285016112ae565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020820190508181036000830152611fb18184611659565b905092915050565b611fc2816117d3565b82525050565b611fd181611059565b82525050565b6000611fe282611613565b611fec8185611c36565b9350611ffc81856020860161162f565b6120058161109e565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b60408201600082015161204160008501826118ee565b5060208201516120546020850182611d20565b50505050565b6000612066838361202b565b60408301905092915050565b6000602082019050919050565b600061208a82612010565b6120948185611cd7565b935061209f8361201b565b8060005b838110156120d05781516120b7888261205a565b97506120c283612072565b9250506001810190506120a3565b5085935050505092915050565b600060a0830160008301516120f56000860182611fb9565b5060208301516121086020860182611fc8565b50604083015184820360408601526121208282611fd7565b9150506060830151848203606086015261213a8282611fd7565b91505060808301518482036080860152612154828261207f565b9150508091505092915050565b6000602082019050818103600083015261217b81846120dd565b905092915050565b61218c81611059565b82525050565b60006080820190506121a760008301876117dd565b6121b46020830186612183565b6121c16040830185611834565b6121ce60608301846117dd565b95945050505050565b60006060820190506121ec6000830186611834565b6121f96020830185611834565b61220660408301846114ed565b949350505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b600061225e838361220e565b826122698135612219565b925060048210156122a9576122a47fffffffff0000000000000000000000000000000000000000000000000000000083600403600802612245565b831692505b505092915050565b600080fd5b600080fd5b600080858511156122cf576122ce6122b1565b5b838611156122e0576122df6122b6565b5b6001850283019150848603905094509492505050565b60006020828403121561230c5761230b611099565b5b612316602061110f565b9050600061232684828501611299565b60008301525092915050565b6000602082840312156123485761234761104f565b5b6000612356848285016122f6565b91505092915050565b612368816115f8565b811461237357600080fd5b50565b6000815190506123858161235f565b92915050565b6000602082840312156123a1576123a061104f565b5b60006123af84828501612376565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612425602a836123b8565b9150612430826123c9565b604082019050919050565b6000602082019050818103600083015261245481612418565b9050919050565b61246481612219565b82525050565b600060208201905061247f600083018461245b565b92915050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006124e16026836123b8565b91506124ec82612485565b604082019050919050565b60006020820190508181036000830152612510816124d4565b9050919050565b600081905092915050565b600061252d82611613565b6125378185612517565b935061254781856020860161162f565b80840191505092915050565b600061255f8284612522565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b60006125a0601d836123b8565b91506125ab8261256a565b602082019050919050565b600060208201905081810360008301526125cf81612593565b9050919050565b600081519050919050565b60006125ec826125d6565b6125f681856123b8565b935061260681856020860161162f565b61260f8161109e565b840191505092915050565b6000602082019050818103600083015261263481846125e1565b90509291505056fea26469706673582212202dd6ee9b83996bc510dbd1181963fa89c4f8134b4ecea34626774cd79a7d05c764736f6c63430008180033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCCIPRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCCIPRouter__factory {
    return super.connect(runner) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCCIPRouter {
    return new Contract(address, _abi, runner) as unknown as MockCCIPRouter;
  }
}
