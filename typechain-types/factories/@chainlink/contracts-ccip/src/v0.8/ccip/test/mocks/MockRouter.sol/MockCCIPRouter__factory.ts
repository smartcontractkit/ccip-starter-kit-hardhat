/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../../../../../@chainlink/contracts-ccip/src/v0.8/ccip/test/mocks/MockRouter.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "ReceiverError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    name: "MsgExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getOnRamp",
    outputs: [
      {
        internalType: "address",
        name: "onRampAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOffRamp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612742806100206000396000f3fe6080604052600436106100915760003560e01c8063a48a905811610059578063a48a9058146101a8578063a8d87a3b146101e5578063d6be695a14610222578063ee18e0d31461024d578063fbca3b741461027857610091565b806320487ded146100965780633cf97983146100d357806369fe0e2d1461011257806383826b2b1461013b57806396f4e9f914610178575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190611538565b6102b5565b6040516100ca91906115a3565b60405180910390f35b3480156100df57600080fd5b506100fa60048036038101906100f5919061161c565b6102c1565b60405161010993929190611739565b60405180910390f35b34801561011e57600080fd5b5061013960048036038101906101349190611777565b6102ec565b005b34801561014757600080fd5b50610162600480360381019061015d91906117a4565b6102f6565b60405161016f91906117e4565b60405180910390f35b610192600480360381019061018d919061181e565b610302565b60405161019f9190611893565b60405180910390f35b3480156101b457600080fd5b506101cf60048036038101906101ca91906118ae565b61079a565b6040516101dc91906117e4565b60405180910390f35b3480156101f157600080fd5b5061020c600480360381019061020791906118ae565b6107a5565b60405161021991906118ea565b60405180910390f35b34801561022e57600080fd5b506102376107b3565b6040516102449190611924565b60405180910390f35b34801561025957600080fd5b506102626107ba565b60405161026f919061194e565b60405180910390f35b34801561028457600080fd5b5061029f600480360381019061029a91906118ae565b6107c0565b6040516102ac9190611a27565b60405180910390f35b60008054905092915050565b6000606060006102dc876102d490611b55565b878787610813565b9250925092509450945094915050565b8060008190555050565b60006001905092915050565b600060208280600001906103169190611b77565b90501461036a5781806000019061032d9190611b77565b6040517f370d875f000000000000000000000000000000000000000000000000000000008152600401610361929190611c07565b60405180910390fd5b600082806000019061037c9190611b77565b8101906103899190611777565b905073ffffffffffffffffffffffffffffffffffffffff80168111806103af5750600a81105b15610401578280600001906103c49190611b77565b6040517f370d875f0000000000000000000000000000000000000000000000000000000081526004016103f8929190611c07565b60405180910390fd5b6000610416858561041190611c2b565b6102b5565b9050600073ffffffffffffffffffffffffffffffffffffffff168460600160208101906104439190611c3e565b73ffffffffffffffffffffffffffffffffffffffff160361049d5780341015610498576040517f07da6ee600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610518565b60003411156104d8576040517f1841b4e100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105173330838760600160208101906104f19190611c3e565b73ffffffffffffffffffffffffffffffffffffffff166109ec909392919063ffffffff16565b5b600082905060006105378680608001906105329190611b77565b610a75565b6000015190506000866040516020016105509190611f5d565b60405160208183030381529060405280519060200120905060006040518060a0016040528083815260200167de41ba4fc9d91ad967ffffffffffffffff168152602001336040516020016105a491906118ea565b60405160208183030381529060405281526020018980602001906105c89190611b77565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018980604001906106209190611f7f565b808060200260200160405190810160405280939291908181526020016000905b82821015610670578484839050604002018036038101906106619190611fe2565b81526020019060010190610640565b5050505050815250905060005b88806040019061068d9190611f7f565b90508110156107305761072533868b80604001906106ab9190611f7f565b858181106106bc576106bb61200f565b5b905060400201602001358c80604001906106d69190611f7f565b868181106106e7576106e661200f565b5b90506040020160000160208101906106ff9190611c3e565b73ffffffffffffffffffffffffffffffffffffffff166109ec909392919063ffffffff16565b80600101905061067d565b50600080610742836113888789610813565b50915091508161078957806040517f0a8d6e8c000000000000000000000000000000000000000000000000000000008152600401610780919061203e565b60405180910390fd5b839850505050505050505092915050565b600060019050919050565b600063499602d29050919050565b62030d4081565b61138881565b6060600067ffffffffffffffff8111156107dd576107dc611156565b5b60405190808252806020026020018201604052801561080b5781602001602082028036833780820191505090505b509050919050565b6000606060008087606001515114801561082d5750600085145b8061084f575060008473ffffffffffffffffffffffffffffffffffffffff163b145b806108a0575061089e7f85572ffb000000000000000000000000000000000000000000000000000000008573ffffffffffffffffffffffffffffffffffffffff16610bf890919063ffffffff16565b155b156108c5576001600060405180602001604052806000815250909250925092506109e2565b60006385572ffb60e01b886040516024016108e09190612208565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905061094d8186888a6084610c1d565b8094508195508296505050507fa8b0355886b5b7a28bb97e4f0a24feb172618407402721c4012d8b7c6433102f84848460405161098c93929190611739565b60405180910390a17f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b6886000015189602001513384805190602001206040516109d89493929190612239565b60405180910390a1505b9450945094915050565b610a6f846323b872dd60e01b858585604051602401610a0d9392919061227e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d50565b50505050565b610a7d6110d0565b60008383905003610ab057604051806040016040528062030d4063ffffffff168152602001600015158152509050610bf2565b6000838390610abf91906122f9565b905063181dcf1060e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610b355783836004908092610b2093929190612362565b810190610b2d9190612419565b915050610bf2565b6397a657c960e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610bc057604051806040016040528085856004908092610b9f93929190612362565b810190610bac9190611777565b815260200160001515815250915050610bf2565b6040517f5247fdce00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b6000610c0383610e17565b8015610c155750610c148383610e64565b5b905092915050565b6000606060008361ffff1667ffffffffffffffff811115610c4157610c40611156565b5b6040519080825280601f01601f191660200182016040528015610c735781602001600182028036833780820191505090505b509150863b610ca6577f0c3b563c0000000000000000000000000000000000000000000000000000000060005260046000fd5b5a85811015610cd9577fafa32a2c0000000000000000000000000000000000000000000000000000000060005260046000fd5b85810390508660408204820311610d14577f37c3be290000000000000000000000000000000000000000000000000000000060005260046000fd5b5a6000808b5160208d0160008d8df194505a810392503d86811115610d37578690505b808552806000602087013e505050955095509592505050565b6000610db2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f039092919063ffffffff16565b9050600081511115610e125780806020019051810190610dd2919061245b565b610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e089061250b565b60405180910390fd5b5b505050565b6000610e43827f01ffc9a700000000000000000000000000000000000000000000000000000000610e64565b8015610e5d5750610e5b8263ffffffff60e01b610e64565b155b9050919050565b60008082604051602401610e78919061253a565b6040516020818303038152906040526301ffc9a760e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015610eeb575060208210155b8015610ef75750600081115b94505050505092915050565b6060610f128484600085610f1b565b90509392505050565b606082471015610f60576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f57906125c7565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f899190612623565b60006040518083038185875af1925050503d8060008114610fc6576040519150601f19603f3d011682016040523d82523d6000602084013e610fcb565b606091505b5091509150610fdc87838387610fe8565b92505050949350505050565b6060831561104a576000835103611042576110028561105d565b611041576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103890612686565b60405180910390fd5b5b829050611055565b6110548383611080565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156110935781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c791906126ea565b60405180910390fd5b6040518060400160405280600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b61111d81611100565b811461112857600080fd5b50565b60008135905061113a81611114565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61118e82611145565b810181811067ffffffffffffffff821117156111ad576111ac611156565b5b80604052505050565b60006111c06110ec565b90506111cc8282611185565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156111fb576111fa611156565b5b61120482611145565b9050602081019050919050565b82818337600083830152505050565b600061123361122e846111e0565b6111b6565b90508281526020810184848401111561124f5761124e6111db565b5b61125a848285611211565b509392505050565b600082601f830112611277576112766111d6565b5b8135611287848260208601611220565b91505092915050565b600067ffffffffffffffff8211156112ab576112aa611156565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112ec826112c1565b9050919050565b6112fc816112e1565b811461130757600080fd5b50565b600081359050611319816112f3565b92915050565b6000819050919050565b6113328161131f565b811461133d57600080fd5b50565b60008135905061134f81611329565b92915050565b60006040828403121561136b5761136a611140565b5b61137560406111b6565b905060006113858482850161130a565b600083015250602061139984828501611340565b60208301525092915050565b60006113b86113b384611290565b6111b6565b905080838252602082019050604084028301858111156113db576113da6112bc565b5b835b8181101561140457806113f08882611355565b8452602084019350506040810190506113dd565b5050509392505050565b600082601f830112611423576114226111d6565b5b81356114338482602086016113a5565b91505092915050565b600060a0828403121561145257611451611140565b5b61145c60a06111b6565b9050600082013567ffffffffffffffff81111561147c5761147b6111d1565b5b61148884828501611262565b600083015250602082013567ffffffffffffffff8111156114ac576114ab6111d1565b5b6114b884828501611262565b602083015250604082013567ffffffffffffffff8111156114dc576114db6111d1565b5b6114e88482850161140e565b60408301525060606114fc8482850161130a565b606083015250608082013567ffffffffffffffff8111156115205761151f6111d1565b5b61152c84828501611262565b60808301525092915050565b6000806040838503121561154f5761154e6110f6565b5b600061155d8582860161112b565b925050602083013567ffffffffffffffff81111561157e5761157d6110fb565b5b61158a8582860161143c565b9150509250929050565b61159d8161131f565b82525050565b60006020820190506115b86000830184611594565b92915050565b600080fd5b600060a082840312156115d9576115d86115be565b5b81905092915050565b600061ffff82169050919050565b6115f9816115e2565b811461160457600080fd5b50565b600081359050611616816115f0565b92915050565b60008060008060808587031215611636576116356110f6565b5b600085013567ffffffffffffffff811115611654576116536110fb565b5b611660878288016115c3565b945050602061167187828801611607565b935050604061168287828801611340565b92505060606116938782880161130a565b91505092959194509250565b60008115159050919050565b6116b48161169f565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116f45780820151818401526020810190506116d9565b60008484015250505050565b600061170b826116ba565b61171581856116c5565b93506117258185602086016116d6565b61172e81611145565b840191505092915050565b600060608201905061174e60008301866116ab565b81810360208301526117608185611700565b905061176f6040830184611594565b949350505050565b60006020828403121561178d5761178c6110f6565b5b600061179b84828501611340565b91505092915050565b600080604083850312156117bb576117ba6110f6565b5b60006117c98582860161112b565b92505060206117da8582860161130a565b9150509250929050565b60006020820190506117f960008301846116ab565b92915050565b600060a08284031215611815576118146115be565b5b81905092915050565b60008060408385031215611835576118346110f6565b5b60006118438582860161112b565b925050602083013567ffffffffffffffff811115611864576118636110fb565b5b611870858286016117ff565b9150509250929050565b6000819050919050565b61188d8161187a565b82525050565b60006020820190506118a86000830184611884565b92915050565b6000602082840312156118c4576118c36110f6565b5b60006118d28482850161112b565b91505092915050565b6118e4816112e1565b82525050565b60006020820190506118ff60008301846118db565b92915050565b600063ffffffff82169050919050565b61191e81611905565b82525050565b60006020820190506119396000830184611915565b92915050565b611948816115e2565b82525050565b6000602082019050611963600083018461193f565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61199e816112e1565b82525050565b60006119b08383611995565b60208301905092915050565b6000602082019050919050565b60006119d482611969565b6119de8185611974565b93506119e983611985565b8060005b83811015611a1a578151611a0188826119a4565b9750611a0c836119bc565b9250506001810190506119ed565b5085935050505092915050565b60006020820190508181036000830152611a4181846119c9565b905092915050565b611a528161187a565b8114611a5d57600080fd5b50565b600081359050611a6f81611a49565b92915050565b600060a08284031215611a8b57611a8a611140565b5b611a9560a06111b6565b90506000611aa584828501611a60565b6000830152506020611ab98482850161112b565b602083015250604082013567ffffffffffffffff811115611add57611adc6111d1565b5b611ae984828501611262565b604083015250606082013567ffffffffffffffff811115611b0d57611b0c6111d1565b5b611b1984828501611262565b606083015250608082013567ffffffffffffffff811115611b3d57611b3c6111d1565b5b611b498482850161140e565b60808301525092915050565b6000611b613683611a75565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611b9457611b93611b68565b5b80840192508235915067ffffffffffffffff821115611bb657611bb5611b6d565b5b602083019250600182023603831315611bd257611bd1611b72565b5b509250929050565b6000611be683856116c5565b9350611bf3838584611211565b611bfc83611145565b840190509392505050565b60006020820190508181036000830152611c22818486611bda565b90509392505050565b6000611c37368361143c565b9050919050565b600060208284031215611c5457611c536110f6565b5b6000611c628482850161130a565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611c9757611c96611c75565b5b83810192508235915060208301925067ffffffffffffffff821115611cbf57611cbe611c6b565b5b600182023603831315611cd557611cd4611c70565b5b509250929050565b600082825260208201905092915050565b6000611cfa8385611cdd565b9350611d07838584611211565b611d1083611145565b840190509392505050565b60008083356001602003843603038112611d3857611d37611c75565b5b83810192508235915060208301925067ffffffffffffffff821115611d6057611d5f611c6b565b5b604082023603831315611d7657611d75611c70565b5b509250929050565b600082825260208201905092915050565b6000819050919050565b6000611da8602084018461130a565b905092915050565b6000611dbf6020840184611340565b905092915050565b611dd08161131f565b82525050565b60408201611de76000830183611d99565b611df46000850182611995565b50611e026020830183611db0565b611e0f6020850182611dc7565b50505050565b6000611e218383611dd6565b60408301905092915050565b600082905092915050565b6000604082019050919050565b6000611e518385611d7e565b9350611e5c82611d8f565b8060005b85811015611e9557611e728284611e2d565b611e7c8882611e15565b9750611e8783611e38565b925050600181019050611e60565b5085925050509392505050565b600060a08301611eb56000840184611c7a565b8583036000870152611ec8838284611cee565b92505050611ed96020840184611c7a565b8583036020870152611eec838284611cee565b92505050611efd6040840184611d1b565b8583036040870152611f10838284611e45565b92505050611f216060840184611d99565b611f2e6060860182611995565b50611f3c6080840184611c7a565b8583036080870152611f4f838284611cee565b925050508091505092915050565b60006020820190508181036000830152611f778184611ea2565b905092915050565b60008083356001602003843603038112611f9c57611f9b611b68565b5b80840192508235915067ffffffffffffffff821115611fbe57611fbd611b6d565b5b602083019250604082023603831315611fda57611fd9611b72565b5b509250929050565b600060408284031215611ff857611ff76110f6565b5b600061200684828501611355565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208201905081810360008301526120588184611700565b905092915050565b6120698161187a565b82525050565b61207881611100565b82525050565b6000612089826116ba565b6120938185611cdd565b93506120a38185602086016116d6565b6120ac81611145565b840191505092915050565b600081519050919050565b6000819050602082019050919050565b6040820160008201516120e86000850182611995565b5060208201516120fb6020850182611dc7565b50505050565b600061210d83836120d2565b60408301905092915050565b6000602082019050919050565b6000612131826120b7565b61213b8185611d7e565b9350612146836120c2565b8060005b8381101561217757815161215e8882612101565b975061216983612119565b92505060018101905061214a565b5085935050505092915050565b600060a08301600083015161219c6000860182612060565b5060208301516121af602086018261206f565b50604083015184820360408601526121c7828261207e565b915050606083015184820360608601526121e1828261207e565b915050608083015184820360808601526121fb8282612126565b9150508091505092915050565b600060208201905081810360008301526122228184612184565b905092915050565b61223381611100565b82525050565b600060808201905061224e6000830187611884565b61225b602083018661222a565b61226860408301856118db565b6122756060830184611884565b95945050505050565b600060608201905061229360008301866118db565b6122a060208301856118db565b6122ad6040830184611594565b949350505050565b600082905092915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600082821b905092915050565b600061230583836122b5565b8261231081356122c0565b925060048210156123505761234b7fffffffff00000000000000000000000000000000000000000000000000000000836004036008026122ec565b831692505b505092915050565b600080fd5b600080fd5b6000808585111561237657612375612358565b5b838611156123875761238661235d565b5b6001850283019150848603905094509492505050565b6123a68161169f565b81146123b157600080fd5b50565b6000813590506123c38161239d565b92915050565b6000604082840312156123df576123de611140565b5b6123e960406111b6565b905060006123f984828501611340565b600083015250602061240d848285016123b4565b60208301525092915050565b60006040828403121561242f5761242e6110f6565b5b600061243d848285016123c9565b91505092915050565b6000815190506124558161239d565b92915050565b600060208284031215612471576124706110f6565b5b600061247f84828501612446565b91505092915050565b600082825260208201905092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006124f5602a83612488565b915061250082612499565b604082019050919050565b60006020820190508181036000830152612524816124e8565b9050919050565b612534816122c0565b82525050565b600060208201905061254f600083018461252b565b92915050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006125b1602683612488565b91506125bc82612555565b604082019050919050565b600060208201905081810360008301526125e0816125a4565b9050919050565b600081905092915050565b60006125fd826116ba565b61260781856125e7565b93506126178185602086016116d6565b80840191505092915050565b600061262f82846125f2565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612670601d83612488565b915061267b8261263a565b602082019050919050565b6000602082019050818103600083015261269f81612663565b9050919050565b600081519050919050565b60006126bc826126a6565b6126c68185612488565b93506126d68185602086016116d6565b6126df81611145565b840191505092915050565b6000602082019050818103600083015261270481846126b1565b90509291505056fea264697066735822122070b2c2e3452238c94ab98b0de4556d86f53b6f3af46b6c7b375f15adfc70140664736f6c63430008180033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCCIPRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCCIPRouter__factory {
    return super.connect(runner) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCCIPRouter {
    return new Contract(address, _abi, runner) as unknown as MockCCIPRouter;
  }
}
