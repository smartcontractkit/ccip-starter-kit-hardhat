/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRMN,
  IRMNInterface,
} from "../../../../../../../@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRMN";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "commitStore",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
        ],
        internalType: "struct IRMN.TaggedRoot",
        name: "taggedRoot",
        type: "tuple",
      },
    ],
    name: "isBlessed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "subject",
        type: "bytes16",
      },
    ],
    name: "isCursed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCursed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRMN__factory {
  static readonly abi = _abi;
  static createInterface(): IRMNInterface {
    return new Interface(_abi) as IRMNInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRMN {
    return new Contract(address, _abi, runner) as unknown as IRMN;
  }
}
